{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReverse","shouldShowReset","sortBy","sortByKey","className","type","cn","ALPHABET","onClick","LENGTH","currentReverse","goods","visibleGoods","sort","firstItem","secondItem","localeCompare","length","reverse","getReorderedGoods","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAU,WACrB,IA0BA,EAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAkBF,GAAcF,IAAaL,EAASI,KAEtDM,EAAS,SAACC,GACdL,EAAYK,IAYd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYT,IAAaL,EAASe,WAEpCC,QAAS,kBAAMN,EAAOV,EAASe,WALjC,iCAUA,wBACEF,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYT,IAAaL,EAASiB,SAEpCD,QAAS,kBAAMN,EAAOV,EAASiB,SALjC,4BAUA,wBACEJ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaP,IAEfS,QArCQ,WACdR,GAAW,SAACU,GAAD,OAAqBA,MA+B5B,qBAUCT,GACC,wBACEI,KAAK,SACLD,UAAU,4BACVI,QA1CI,WACZR,GAAW,GACXF,EAAYN,EAASI,OAqCf,sBAUJ,6BAvFsB,SACxBe,EADwB,GAGpB,IADFd,EACC,EADDA,SAAUE,EACT,EADSA,WAENa,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQlB,GACN,KAAKL,EAASe,SACZ,OAAOO,EAAUE,cAAcD,GAEjC,KAAKvB,EAASiB,OACZ,OAAOK,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,MAITlB,GACFa,EAAaM,UAGRN,EAiEFO,CACC1B,EACA,CAAEI,WAAUE,eACZqB,KAAI,SAACC,GAAD,OACJ,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCxHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18f7156f.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport const App: FC = () => {\n  const getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((firstItem, secondItem) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return firstItem.localeCompare(secondItem);\n\n        case SortType.LENGTH:\n          return firstItem.length - secondItem.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n  const shouldShowReset = isReversed || sortType !== SortType.NONE;\n\n  const sortBy = (sortByKey: SortType) => {\n    setSortType(sortByKey);\n  };\n\n  const reverse = () => {\n    setReverse((currentReverse) => !currentReverse);\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => sortBy(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => sortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {shouldShowReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(\n          goodsFromServer,\n          { sortType, isReversed },\n        ).map((item) => (\n          <li data-cy=\"Good\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}