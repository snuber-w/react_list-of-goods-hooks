{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","shouldShowReset","reorderedGoods","goods","visibleGoods","sort","firstItem","secondItem","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","currentReverse","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IA0BME,EAAU,WACrB,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAkBF,GAAcF,IAAaL,EAASI,KACtDM,EA9ByB,SAC/BC,EAD+B,GAG3B,IADFN,EACC,EADDA,SAAUE,EACT,EADSA,WAENK,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQV,GACN,KAAKL,EAASgB,SACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKf,EAASkB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAGRR,EAOgBS,CAAkBpB,EAAiB,CACxDI,WAAUE,eAYZ,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYnB,IAAaL,EAASgB,WAEpCS,QAAS,kBAAMnB,EAAYN,EAASgB,WALtC,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYnB,IAAaL,EAASkB,SAEpCO,QAAS,kBAAMnB,EAAYN,EAASkB,SALtC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAajB,IAEfkB,QArCQ,WACdjB,GAAc,SAACkB,GAAD,OAAqBA,MA+B/B,qBAUCjB,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZjB,GAAc,GACdF,EAAYN,EAASI,OAqCf,sBAUJ,6BACGM,EAAeiB,KAAI,SAACC,GAAD,OAClB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCpHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bff02152.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport const getReorderedGoods = (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) => {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstItem, secondItem) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstItem.localeCompare(secondItem);\n\n      case SortType.LENGTH:\n        return firstItem.length - secondItem.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const shouldShowReset = isReversed || sortType !== SortType.NONE;\n  const reorderedGoods = getReorderedGoods(goodsFromServer, {\n    sortType, isReversed,\n  });\n\n  const reverse = () => {\n    setIsReversed((currentReverse) => !currentReverse);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {shouldShowReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map((item) => (\n          <li data-cy=\"Good\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}